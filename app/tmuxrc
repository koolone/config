#-- base --#
set -g default-terminal "screen-256color"
#set -g default-terminal "xterm"

# use ZSH
set-option -g default-shell /bin/zsh

set -g display-time 3000
set -g history-limit 65535
set -g base-index 1
set -g pane-base-index 1
# Allows for faster key repetition
set -s escape-time 0
 
# rm mouse mode fail
#set -g mode-mouse off
set -g mode-keys vi
set -g status-keys vi

# C-b is not acceptable -- Vim uses it
#ubind ^z
#ubind C-z 
set-option -g prefix C-z
#ubind ^b
bind-key C-a last-window
bind-key C-q suspend-client
 
# auto window rename
set-window-option -g automatic-rename
 
#-- bindkeys --#
# vim's defination of a horizontal/vertical split is revised from tumx's
bind s split-window -h
bind v split-window -v
unbind '"'
bind - splitw -v # 分割成上下两个窗口
unbind %
bind | splitw -h # 分割成左右两个窗口
 
bind k selectp -U # 选择上窗格
bind j selectp -D # 选择下窗格
bind h selectp -L # 选择左窗格
bind l selectp -R # 选择右窗格
 
bind ^k resizep -U 10 # 跟选择窗格的设置相同，只是多加 Ctrl（Ctrl-k）
bind ^j resizep -D 10 # 同上
bind ^h resizep -L 10 # ...
bind ^l resizep -R 10 # ...
 
bind ^u swapp -U # 与上窗格交换 Ctrl-u
bind ^d swapp -D # 与下窗格交换 Ctrl-d
 
 
# status bar
set-option -g status-utf8 on
 
set -g status-interval 1
set -g status-justify left # center align window list
set -g status-left-length 20
set -g status-right-length 140
#set -g status-left '#[fg=green]#H #[fg=black]• #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'
set -g status-right "#[fg=green]#(uptime.pl)#[default] • #[fg=green]#(cut -d ' ' -f 1-3 /proc/loadavg)#[default]"
#set -g status-right '#[fg=green,bg=black,bright]#(tmux-mem-cpu-load 1) #[fg=red,dim]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'
 
# default statusbar colors
# set -g status-fg white
# set -g status-bg default
# set -g status-attr bright
set -g status-bg colour235 #base02
set -g status-fg colour136 #yellow
set -g status-attr default
 
 
# default window title colors
#set-window-option -g window-status-fg white
#set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim
setw -g window-status-fg colour244
setw -g window-status-bg default
#setw -g window-status-attr dim
 
# active window title colors
#set-window-option -g window-status-current-fg white
#set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright
setw -g window-status-current-fg colour166 #orange
setw -g window-status-current-bg default
#setw -g window-status-current-attr bright
 
# pane border
set -g pane-border-fg colour235 #base02
set -g pane-active-border-fg colour240 #base01
 
# message text
set -g message-bg colour235 #base02
set -g message-fg colour166 #orange
 
# pane number display
set -g display-panes-active-colour colour33 #blue
set -g display-panes-colour colour166 #orange
 
# clock
setw -g clock-mode-colour colour64 #green
 
 
 
 
# Start numbering at 1
# set -g base-index 1
 
 
# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on
 
# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key z send-prefix
 
# Activity monitoring
# setw -g monitor-activity on
# set -g visual-activity on
 
# Highlight active window
set-window-option -g window-status-current-bg red
 
# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
 
# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by,
# only one at a time can be slow
bind < resize-pane -L 10
bind > resize-pane -R 10
bind - resize-pane -D 10
bind + resize-pane -U 10
 
#-- apps --#
#new -s Edit zsh
#neww -n Dev zsh
#neww -n Cmp zsh
#neww -n Shell zsh
#selectw -t 1


#unbind [
bind Escape copy-mode
# Vi copypaste mode
set-window-option -g mode-keys vi
#unbind p
#bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection
 

# Send the same command to all panes/windows/sessions
bind    E command-prompt -p "Command:" \
          "run \"tmux list-sessions                  -F '##{session_name}'        | xargs -I SESS \
                 tmux list-windows  -t SESS          -F 'SESS:##{window_index}'   | xargs -I SESS_WIN \
                 tmux list-panes    -t SESS_WIN      -F 'SESS_WIN.##{pane_index}' | xargs -I SESS_WIN_PANE \
                 tmux send-keys     -t SESS_WIN_PANE '%1' Enter\""
#setw synchronize-panes
#list-keys -t vi-copy

# reload config
#bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# THEME
set -g status-bg black
set -g status-fg white
set -g window-status-current-bg white
set -g window-status-current-fg black
set -g window-status-current-attr bold
set -g status-interval 60
set -g status-left-length 30
set -g status-left '#[fg=green](#S) #(whoami) '
set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=white]%H:%M#[default]'
set-option -g pane-active-border-fg green
# utf8 support
set-window-option -g utf8 on
set-option -g visual-activity on
set-option -g status-utf8 on



# list panes
#bind-key Space list-panes
# break-pane
#bind-key Enter break-pane

# bind key for synchronizing panes
bind-key y set-window-option synchronize-panes
bind y setw synchronize-panes on
bind Y setw synchronize-panes off
